version: '3'
services:                                      # 集合
  docker_jenkins:
    user: root                                 # 为了避免一些权限问题 在这我使用了root
    restart: always                            # 重启方式
    image: jenkins/jenkins:lts                 # 指定服务所使用的镜像 在这里我选择了 LTS (长期支持)
    container_name: jenkins                    # 容器名称
    ports:                                     # 对外暴露的端口定义
      - 8080:8080
      - 50000:50000
    volumes:                                   # 卷挂载路径
      - ./jenkins/jenkins_home/:/var/jenkins_home  # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker                # 这是为了我们可以在容器内使用docker命令
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
      - ./webserver/static/jenkins/dist:/usr/share/nginx/html
  docker_nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - 9527:9527
      - 8088:8088
      - 9528:433
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./webserver/static/jenkins/dist:/usr/share/nginx/html
  config_manage_service:
    user: root
    restart: always
    container_name: config_manage_service
    ports: 
      - 3000:3000
    build: ./config-manage
    volumes:
      - ./config-manage:/root/nodeapps/config-manage/
      - ./webserver/static/jenkins/dist:/usr/share/nginx/html
      - ./webserver/static/jenkins/dist:/usr/local/var/www
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_PASS: '123456'
    ports:
      - 3306:3306
    volumes:
      - "./mysql-data:/var/lib/mysql"
      